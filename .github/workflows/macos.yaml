name: Build with MacOS

on:
  workflow_dispatch:
  push:

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7", "9.0"]
        cabal: ["3.6"]
        os: ["macOS-latest"]
        cabalcache: ["true"]

    steps:
    # Setup
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install GHC and Cabal
      uses: haskell/actions/setup@v1.2.7
      with:
         ghc-version: ${{ matrix.ghc }}
         cabal-version: ${{ matrix.cabal }}
    - name: Confirm GHC and Cabal installation
      run: |
        ghc --version
        cabal --version
    - name: Install non-Haskell dependencies (macOS)
      if: contains(matrix.os, 'mac')
      run: |
        brew update && brew install rocksdb z3 gnu-tar || true
        # work around bug in macOS and github actions cache (cf. https://github.com/actions/cache/issues/403)
        echo PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH" >> $GITHUB_ENV
    - name: Create cabal.project.local
      run: |
        cat > cabal.project.local <<EOF
        package *
          documentation: False
        package chainweb
          documentation: False
          benchmarks: True
          tests: True
        package pact
          documentation: False
        EOF
    - uses: pat-s/always-upload-cache@v2.1.5
      name: Cache dist-newstyle
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ matrix.os }}-${{ matrix.ghc }}-7-cabal

    # Build
    - name: Delete Freeze file
      run: rm cabal.project.freeze
    - name: Update package database
      run: cabal update
    - name: Display outdated packages
      run: cabal outdated
    - name: Configure build
      run: |
        cabal build all --dry-run
        cabal freeze
    - name: Sync from cabal cache
      if: matrix.cabalcache == 'true'
      uses: larskuhtz/cabal-cache-action@ecc751af6d31b3ed5a3b4aefdefd0ed6ef4cb414
      with:
        bucket: "kadena-cabal-cache"
        region: "us-east-1"
        folder: "${{ matrix.os }}"
        aws_access_key_id: "${{ secrets.kadena_cabal_cache_aws_access_key_id }}"
        aws_secret_access_key: "${{ secrets.kadena_cabal_cache_aws_secret_access_key }}"
    - name: Install build dependencies
      run: cabal build chainweb --only-dependencies
    - name: Build chainweb library
      run: cabal build lib:chainweb
    - name: Build chainweb applications
      run: cabal build exe:chainweb-node test:chainweb-tests exe:cwtool chainweb:bench:bench

    - name: Run Tests
      run: |
        ulimit -n 10000
        cabal run tests -- --hide-successes

    # Checks
    - name: Check that working directory tree is clean
      run: |
        # the freeze file has likely has changed
        mv cabal.project.freeze cabal.project.freeze.backup
        git checkout -- cabal.project.freeze || true
        if ! git diff --exit-code; then
          echo "Git working tree is not clean. The build changed some file that is checked into git." 1>&2
          exit 1
        fi
        mv cabal.project.freeze.backup cabal.project.freeze
    - name: Run ea and verify consistency of genesis headers
      run: |
        cabal run cwtool -- ea
        # the freeze file has likely changed
        mv cabal.project.freeze cabal.project.freeze.backup
        git checkout -- cabal.project.freeze || true
        if ! git diff --exit-code; then
          echo "Inconsistent genesis headers detected. Did you forget to run ea?" 1>&2
          exit 1
        fi
        mv cabal.project.freeze.backup cabal.project.freeze
