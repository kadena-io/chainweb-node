packages:
    chainweb.cabal
    node/chainweb-node.cabal

debug-info: True

-- -------------------------------------------------------------------------- --
-- Platform specific locations of external libraries

if os(darwin)
    if arch(aarch64)
        package *
            extra-include-dirs:
                /opt/homebrew/include
                /opt/homebrew/opt/openssl/include
            extra-lib-dirs:
                /opt/homebrew/lib
                /opt/homebrew/opt/openssl/lib
    else
        package *
            extra-include-dirs:
                /opt/local/include
                /usr/local/opt/openssl/include
                /opt/homebrew/include
                /opt/homebrew/opt/openssl/include
            extra-lib-dirs:
                /opt/local/lib
                /usr/local/opt/openssl/lib/
                /opt/homebrew/lib
                /opt/homebrew/opt/openssl/lib

-- -------------------------------------------------------------------------- --
-- Package Specific Build Settings

package chainweb
    tests: True
    benchmarks: True
    ghc-options: -Wno-missed-extra-shared-lib

package node
    ghc-options: -Wno-missed-extra-shared-lib

if impl(ghc >= 9.8.1)
    package chainweb
        ghc-options: -Wno-x-partial

    -- Remove once we actually upgrade to GHC 9.8.1, these
    -- will be released
    allow-newer: bytesmith:bytestring
    allow-newer: bytebuild:*
    allow-newer: byteslice:*
    constraints: haskell-src-meta >= 0.8.13

package pact
    ghc-options: -Wwarn
    optimization: True
    -- avoid conflict with cryptonite during linking
    flags: +cryptonite-ed25519 -build-tool

package rocksdb-haskell-kadena
    ghc-options: -Wwarn -optc-w -optcxx-w

package crypton
    flags: +support_pclmuldq

package vault
    documentation: false

package yet-another-logger
    flags: -tbmqueue

-- -------------------------------------------------------------------------- --
-- Source Repository Packages
--
-- In order to determine proper sha256 value each time the revision is
-- changed, please run the following command:
--
--   nix-prefetch-git --url <location> --rev <tag>

source-repository-package
    type: git
    location: https://github.com/kadena-io/pact.git
    tag: f5980d1594122a65872980bf92d7295c32997116
    --sha256: 1vwv8qrg2fpxalk3mdnj2zwzjynldvdsdmz2jzq5jyrcykfqafy2

source-repository-package
    type: git
    location: https://github.com/kadena-io/pact-json.git
    tag: 1d260bfaa48312b54851057885de4c43c420e35f
    --sha256: 0fzq4mzaszj5clvixx9mn1x6r4dcrnwvbl2znd0p5mmy5h2jr0hh

source-repository-package
    type: git
    location: https://github.com/kadena-io/chainweb-storage.git
    tag: a5e06a8aa2da1e7981ff9fad91dfd41f7c39fc85
    --sha256: sha256-3Zqsgrxa7SQUr8XzT2O5PLTELkI92NXZU4j2UUvlL4E=

source-repository-package
    type: git
    location: https://github.com/kadena-io/rocksdb-haskell.git
    tag: cede9de2932a4ead1bd82fd7709b19ab7b19b33d
    --sha256: 1dngd44va6h66vwpdpwmnj0zcky87m4vzykjwv49p2km12lwq9mf

source-repository-package
    type: git
    location: https://github.com/kadena-io/rosetta.git
    tag: 6c8dd2eea1f6d0dba925646dbcb6e07feeccbfd5
    --sha256: 19pjy06xrx2siggzybcmly0qaq4ds3yzxcsvqwgs4qh9kkzh0kqh

source-repository-package
    type: git
    location: https://github.com/kadena-io/kadena-ethereum-bridge.git
    tag: 3837c4c81f1beaffc1d52375e61576366d49170a
    --sha256: 1knhscph2g3saz0pjd1d5a32mr281msapccfrillgd2qk4pj7xjc

source-repository-package
    type: git
    location: https://github.com/kadena-io/wai-middleware-validation.git
    tag: e0437bf82e9b4d3fec5ad42ef6e860f4bd04e1b4
    --sha256: 1az7jcggcj275djnfsvhdg3n7hjrj6vp8rj137fxrg4hazh0hyzv

-- Required for backward compatibility:

-- ixset-typed FIX (no PR yet)
source-repository-package
    type: git
    location: https://github.com/larskuhtz/ixset-typed
    tag: d8019c3404d6f3b3c0b0416e9899cfdf614ef425
    --sha256: 09msayidg23rsdz97fcfqqalm4pbawx3c1qihgab8hnlmjxby103

-- Patch merged into master (upcoming verison 10.0). We are currently using 9.2.
-- This fork contains additional fixes for using 9.2 with recent compilers.
source-repository-package
    type: git
    location: https://github.com/larskuhtz/sbv
    tag: 1f2d042718fcf9a140398bd3dedac77c207cce27
    --sha256: 0l3nhsdxsyx17i29dw691d6bbqz26af6lg6pi1c2kb34v59m2rk3

-- Required for non-canonical decode in base64-bytestring (remove after 2.20 fork)
source-repository-package
    type: git
    location: https://github.com/emilypi/base64-bytestring-kadena
    tag: 174af3523616c8fe01449da5ccbb9f16df097ac3
    --sha256: 0grssxgjygi4ijiqaa87diwv6sdqz77hldf3lr4k7p93w35lhlci

-- -------------------------------------------------------------------------- --
-- Relaxed Bounds

-- GHC-9:

allow-newer: token-bucket:*
allow-newer: ixset-typed:*

-- TODO: I think this fixed?
allow-newer: rosetta:*

-- Servant is notoriously forcing outdated upper bounds onto its users.
-- It is usually safe to just ignore those.
--
allow-newer: servant-server:*
allow-newer: servant-client-core:*
allow-newer: servant-client:*
allow-newer: servant:*

-- these are more liberal than necessary, but since everything works fine
-- with this there's no reason to constrain it more than necessary.
-- These packages are tightly bound to the GHC version and these
-- settings ensure that we use the versions that are shipped with the
-- GHC version that we are using.
allow-newer: *:Cabal
allow-newer: *:Cabal-syntax
allow-newer: *:array
allow-newer: *:base
allow-newer: *:bytestring
allow-newer: *:containers
allow-newer: *:deepseq
allow-newer: *:directory
allow-newer: *:exceptions
allow-newer: *:ghc-compact
allow-newer: *:ghc-prim
allow-newer: *:integer-gmp
allow-newer: *:mtl
allow-newer: *:parsec
allow-newer: *:pretty
allow-newer: *:process
allow-newer: *:stm
allow-newer: *:template-haskell
allow-newer: *:text
allow-newer: *:time
allow-newer: *:transformers

-- Pact uses a vendored version of trifecta that has outdated
-- upper bounds
allow-newer: trifecta:*

-- wai-middleware-validation dependencies

allow-newer: wai-middleware-validation:*
allow-newer: validation:*
allow-newer: these:*
allow-newer: regex-base:*
allow-newer: regex-tdfa:*
allow-newer: base-compat-batteries:*

-- webauthn also uses overly restrictive upper bounds
allow-newer: webauthn:*

-- many packages use an spurious <1.5 upper bound on hashable
allow-newer: *:hashable

-- -------------------------------------------------------------------------- --
-- Upper Bounds
