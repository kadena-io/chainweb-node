packages: chainweb.cabal

debug-info: True

-- -------------------------------------------------------------------------- --
-- Platform specific locations of external libraries

if os(darwin)
    if arch(aarch64)
        package *
            extra-include-dirs:
                /opt/homebrew/include
                /opt/homebrew/opt/openssl/include
            extra-lib-dirs:
                /opt/homebrew/lib
                /opt/homebrew/opt/openssl/lib
    else
        package *
            extra-include-dirs:
                /opt/local/include
                /usr/local/opt/openssl/include
                /opt/homebrew/include
                /opt/homebrew/opt/openssl/include
            extra-lib-dirs:
                /opt/local/lib
                /usr/local/opt/openssl/lib/
                /opt/homebrew/lib
                /opt/homebrew/opt/openssl/lib

-- -------------------------------------------------------------------------- --
-- Package Specific Build Settings

package chainweb
    tests: True
    benchmarks: True
    ghc-options: -Wno-missed-extra-shared-lib

if impl(ghc >= 9.8.1)
    package chainweb
        ghc-options: -Wno-x-partial

    -- Remove once we actually upgrade to GHC 9.8.1, these
    -- will be released
    allow-newer: bytesmith:bytestring
    allow-newer: bytebuild:*
    allow-newer: byteslice:*
    constraints: haskell-src-meta >= 0.8.13

package pact
    ghc-options: -Wwarn
    optimization: True
    -- avoid conflict with cryptonite during linking
    flags: +cryptonite-ed25519 -build-tool

package rocksdb-haskell-kadena
    ghc-options: -Wwarn -optc-w -optcxx-w

package crypton
    flags: +support_pclmuldq

package vault
    documentation: false

package yet-another-logger
    flags: -tbmqueue

-- -------------------------------------------------------------------------- --
-- Source Repository Packages
--
-- In order to determine proper sha256 value each time the revision is
-- changed, please run the following command:
--
--   nix-prefetch-git --url <location> --rev <tag>

source-repository-package
    type: git
    location: https://github.com/kadena-io/pact.git
    tag: 4c0acc5fb322014b120c4a5942db8505968ab046
    --sha256: 0kyh6xwm06npbw73dil5xpngfr7h6ppsn5jz7hjkirq9hj33aqqv

source-repository-package
    type: git
    location: https://github.com/kadena-io/pact-json.git
    tag: 1d260bfaa48312b54851057885de4c43c420e35f
    --sha256: 0fzq4mzaszj5clvixx9mn1x6r4dcrnwvbl2znd0p5mmy5h2jr0hh

source-repository-package
    type: git
    location: https://github.com/kadena-io/chainweb-storage.git
    tag: 4b45c1ab9c070c6d16a058bcbab0c06ac0fb6d4e
    --sha256: 0m6c7kl6x5a3k02q2i7qzfx91kxz19dzav0piqfxra52bq0x3sm6

source-repository-package
    type: git
    location: https://github.com/kadena-io/rocksdb-haskell.git
    tag: cede9de2932a4ead1bd82fd7709b19ab7b19b33d
    --sha256: 1dngd44va6h66vwpdpwmnj0zcky87m4vzykjwv49p2km12lwq9mf

source-repository-package
    type: git
    location: https://github.com/kadena-io/rosetta.git
    tag: 6c8dd2eea1f6d0dba925646dbcb6e07feeccbfd5
    --sha256: 19pjy06xrx2siggzybcmly0qaq4ds3yzxcsvqwgs4qh9kkzh0kqh

source-repository-package
    type: git
    location: https://github.com/kadena-io/kadena-ethereum-bridge.git
    tag: a32d901e4a79be62af9c27c01152c9a4c3912a62
    --sha256: sha256-xdawv/tdjh61MbJKcBqm9Fje36+gVljuZsAxOTX1gP0=

source-repository-package
    type: git
    location: https://github.com/kadena-io/wai-middleware-validation.git
    tag: e0437bf82e9b4d3fec5ad42ef6e860f4bd04e1b4
    --sha256: 1az7jcggcj275djnfsvhdg3n7hjrj6vp8rj137fxrg4hazh0hyzv

-- Required for backward compatibility:

-- ixset-typed FIX (no PR yet)
source-repository-package
    type: git
    location: https://github.com/larskuhtz/ixset-typed
    tag: d8019c3404d6f3b3c0b0416e9899cfdf614ef425
    --sha256: 09msayidg23rsdz97fcfqqalm4pbawx3c1qihgab8hnlmjxby103

-- Patch merged into master (upcoming version 10.0). We are currently using 9.2
source-repository-package
    type: git
    location: https://github.com/larskuhtz/sbv
    tag: b66e3a04c20f753213fe7e5115a95b3fe34109f9
    --sha256: 0dca5pl56nz8ijnqavnpxw5f47qmpalszd5w0ag8bq3fd0l3839m

-- Required for non-canonical decode in base64-bytestring (remove after 2.20 fork)
source-repository-package
    type: git
    location: https://github.com/emilypi/base64-bytestring-kadena
    tag: 174af3523616c8fe01449da5ccbb9f16df097ac3
    --sha256: sha256-kVFIy+Aj3TNJpsM1Cs/5uGmzeWwHKYWjjCQ+L1/XOj8=

source-repository-package
    type: git
    location: https://github.com/chessai/patience
    tag: 2f67d546ea6608fc6ebe5f2f6976503cbf340442
    --sha256: 0x137akvbh4kr3qagksw74xdj2xz5vjnx1fbr41bb54a0lkcb8mm

source-repository-package
    type: git
    location: https://github.com/andrewthad/chronos
    tag: b199bf6df1453af95832c2d2f9f0ef48c3622caa
    --sha256: 056awkmdmkqdd5g3m8a1ibg2vp02kbppmidkfh4aildb1brq970a

-- -------------------------------------------------------------------------- --
-- Relaxed Bounds

-- GHC-9:

allow-newer: token-bucket:*
allow-newer: ixset-typed:*

-- TODO: I think this fixed?
allow-newer: rosetta:*

-- Servant is notoriously forcing outdated upper bounds onto its users.
-- It is usually safe to just ignore those.
--
allow-newer: servant-server:*
allow-newer: servant-client-core:*
allow-newer: servant-client:*
allow-newer: servant:*

-- these are more liberal than necessary, but since everything works fine
-- with this there's no reason to constrain it more than necessary.
-- These packages are tightly bound to the GHC version and these
-- settings ensure that we use the versions that are shipped with the
-- GHC version that we are using.
allow-newer: *:Cabal
allow-newer: *:Cabal-syntax
allow-newer: *:array
allow-newer: *:base
allow-newer: *:bytestring
allow-newer: *:containers
allow-newer: *:deepseq
allow-newer: *:directory
allow-newer: *:exceptions
allow-newer: *:ghc-compact
allow-newer: *:ghc-prim
allow-newer: *:integer-gmp
allow-newer: *:mtl
allow-newer: *:parsec
allow-newer: *:pretty
allow-newer: *:process
allow-newer: *:stm
allow-newer: *:template-haskell
allow-newer: *:text
allow-newer: *:time
allow-newer: *:transformers

-- Pact uses a vendored version of trifecta that has outdated
-- upper bounds
allow-newer: trifecta:*

-- wai-middleware-validation dependencies

allow-newer: wai-middleware-validation:*
allow-newer: validation:*
allow-newer: these:*
allow-newer: regex-base:*
allow-newer: regex-tdfa:*
allow-newer: base-compat-batteries:*

-- -------------------------------------------------------------------------- --
-- Upper Bounds

allow-newer: webauthn:these
allow-newer: webauthn:time
allow-newer: webauthn:aeson
