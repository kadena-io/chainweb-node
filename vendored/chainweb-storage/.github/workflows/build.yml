name: Build

on:
  push:
  schedule:
    - cron: '0 8 * * *'

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.8.4', '8.10.5', '9.0.1']
        cabal: ['3.4']
        os:
        - 'ubuntu-18.04'
        - 'ubuntu-20.04'
        - 'macOS-latest'
        # - 'windows-latest' # windows builds generally work but are flaky on the github runners

    steps:

    # Setup
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install GHC and Cabal
      uses: haskell/actions/setup@v1.2.3
      with:
         ghc-version: ${{ matrix.ghc }}
         cabal-version: ${{ matrix.cabal }}
    - name: Install non-Haskell dependencies
      shell: bash
      run: |
        case "${{ runner.os }}" in
        Linux)
          sudo apt-get install -y libgflags-dev liblz4-dev libzstd-dev libsnappy-dev libbz2-dev
          ;;
        mac*)
          brew install rocksdb
          ;;
        *)
          echo "::error::unsupported operating system ${{ runner.os }}"
          exit 1
          ;;
        esac
    - name: Configure project
      shell: bash
      run: |
        cat > cabal.project.local <<EOF
        package chainweb-storage
          documentation: True
          benchmarks: True
          tests: True
        write-ghc-environment-files: always
        EOF

    # Restore Packages from Caches
    - uses: actions/cache@v2.1.6
      name: Cache ~/.cabal/packages
      with:
        path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
        key: ${{ matrix.os }}-${{ matrix.ghc }}-cabal-cache-${{ github.sha }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.ghc }}-cabal-cache-

    # Build
    - name: Update package database
      run: cabal update
    - name: Configure build
      run: |
        cabal build all --dry-run
        cabal freeze
    - name: Install build dependencies
      run: cabal build --only-dependencies
    - name: Build library
      run: cabal build

    # Tests
    - name: Run Tests
      run: cabal test

